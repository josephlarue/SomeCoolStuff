<%= render 'shared/navbar' %>

<html>

<body>
<%if @article.title == "Speech Detection"%>
    <div class="words" contenteditable>
    </div>
    <script>
    window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;

    const recognition = new SpeechRecognition();
    recognition.interimResults = true;

    let p = document.createElement('p');
    const words = document.querySelector('.words');
    words.appendChild(p);

    recognition.addEventListener('result', e => {
        const transcript = Array.from(e.results)
        .map(result => result[0])
        .map(result => result.transcript)
        .join('')
        p.textContent = transcript;
        if(e.results[0].isFinal) {
        p = document.createElement('p');
        words.appendChild(p);
        }
    })
    recognition.addEventListener('end', recognition.start);
    recognition.start();
    </script>
    <style>
    html {
      font-size: 10px;
    }

    body {
      background: pink;
      font-family: 'helvetica neue';
      font-weight: 200;
      font-size: 20px;
    }

    .words {
      max-width: 500px;
      margin: 50px auto;
      background: white;
      border-radius: 5px;
      box-shadow: 10px 10px 0 rgba(0,0,0,0.1);
      padding: 1rem 2rem 1rem 5rem;
      background: white;
      background-size: 100% 3rem;
      position: relative;
      line-height: 3rem;
    }
    
    p {
      margin: 0 0 3rem;
    }

    .words:before {
      content: '';
      position: absolute;
      width: 4px;
      top: 0;
      left: 30px;
      bottom: 0;
      border: 1px solid;
      border-color: transparent #efe4e4;
    }
    </style>

    
    
    <%elsif @article.title == "drag with style"%>
    
  <div class="items">
    <div class="item item1">01</div>
    <div class="item item2">02</div>
    <div class="item item3">03</div>
    <div class="item item4">04</div>
    <div class="item item5">05</div>
    <div class="item item6">06</div>
    <div class="item item7">07</div>
    <div class="item item8">08</div>
    <div class="item item9">09</div>
    <div class="item item10">10</div>
    <div class="item item11">11</div>
    <div class="item item12">12</div>
    <div class="item item13">13</div>
    <div class="item item14">14</div>
    <div class="item item15">15</div>
    <div class="item item16">16</div>
    <div class="item item17">17</div>
    <div class="item item18">18</div>
    <div class="item item19">19</div>
    <div class="item item20">20</div>
    <div class="item item21">21</div>
    <div class="item item22">22</div>
    <div class="item item23">23</div>
    <div class="item item24">24</div>
    <div class="item item25">25</div>
  </div>

<script>
  const slider = document.querySelector('.items');
  let isDown = false;
  let startX;
  let scrollLeft;

  slider.addEventListener('mousedown', (e) => {
    isDown = true;
    slider.classList.add('active');
    startX = e.pageX - slider.offsetLeft;
    scrollLeft = slider.scrollLeft;
  })
  slider.addEventListener('mouseleave', () => {
    isDown = false;
    slider.classList.remove('active');
  })
  slider.addEventListener('mouseup', () => {
    isDown = false;
    slider.classList.remove('active');

  })
  slider.addEventListener('mousemove', (e) => {
    if (!isDown) return;
    e.preventDefault();
    const x = e.pageX - slider.offsetLeft;
    const walk = (x - startX)*2;
    slider.scrollLeft = scrollLeft - walk;
  })
</script>
    
    <style>
    html {
  box-sizing: border-box;
  background: pink;
  background-size: cover;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  min-height: 100vh;

  justify-content: center;
  align-items: center;
  font-family: sans-serif;
  font-size: 20px;
  margin: 0;
}
p {
  margin: 0 0 3rem;
}

.items {
  height: 800px;
  padding: 100px;
  width: 100%;
  border: 1px solid white;
  overflow-x: scroll;
  overflow-y: hidden;
  white-space: nowrap;
  user-select: none;
  cursor: pointer;
  transition: all 0.2s;
  transform: scale(0.98);
  will-change: transform;
  position: relative;
  background: rgba(255,255,255,0.1);
  font-size: 0;
  perspective: 500px;
}

.items.active {
  background: rgba(255,255,255,0.3);
  cursor: grabbing;
  transform: scale(1);
}

.item {
  width: 200px;
  height: calc(100% - 40px);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 80px;
  font-weight: 100;
  color: rgba(0,0,0,0.15);
  box-shadow: inset 0 0 0 10px rgba(0,0,0,0.15);
}

.item:nth-child(9n+1) { background: dodgerblue;}
.item:nth-child(9n+2) { background: goldenrod;}
.item:nth-child(9n+3) { background: paleturquoise;}
.item:nth-child(9n+4) { background: gold;}
.item:nth-child(9n+5) { background: cadetblue;}
.item:nth-child(9n+6) { background: tomato;}
.item:nth-child(9n+7) { background: lightcoral;}
.item:nth-child(9n+8) { background: darkslateblue;}
.item:nth-child(9n+9) { background: rebeccapurple;}

.item:nth-child(even) { transform: scaleX(1.31) rotateY(40deg); }
.item:nth-child(odd) { transform: scaleX(1.31) rotateY(-40deg); }
    </style>

  <%elsif @article.title == "secret word"%>
  <h4>type "joseph"</h4>
  <script type="text/javascript" src="https://www.cornify.com/js/cornify.js"></script>
  <script>
const pressed = [];
const secretCode = 'joseph';

window.addEventListener('keyup', (e) => {
  console.log(e.key);
  pressed.push(e.key);
  pressed.splice(-secretCode.length - 1, pressed.length - secretCode.length);
  if (pressed.join('').includes(secretCode)) {
    console.log('DING DING!');
    cornify_add();
  }
  console.log(pressed);
});
</script>

  <%elsif @article.title == "Speech emulator"%>
  <link href='https://fonts.googleapis.com/css?family=Pacifico' rel='stylesheet' type='text/css'>
  <div class="voiceinator">

      <h1>Fun and creepy voices</h1>

      <select name="voice" id="voices">
        <option value="">Select A Voice</option>
      </select>

      <label for="rate">Rate:</label>
      <input name="rate" type="range" min="0" max="3" value="1" step="0.1">

      <label for="pitch">Pitch:</label>

      <input name="pitch" type="range" min="0" max="2" step="0.1">
      <textarea name="text">Hello! I love JavaScript üëç</textarea>
      <button id="stop">Stop!</button>
      <button id="speak">Speak</button>

    </div>

    <script>
      const msg = new SpeechSynthesisUtterance();
      let voices = [];
      const voicesDropdown = document.querySelector('[name="voice"]');
      const options = document.querySelectorAll('[type="range"], [name="text"]');
      const speakButton = document.querySelector('#speak');
      const stopButton = document.querySelector('#stop');
      msg.text = document.querySelector('[name="text"]').value;

      function populateVoices() {
      voices = this.getVoices();
      const voiceOptions = voices
      .map(voice => `<option value="${voice.name}">${voice.name}(${voice.lang})</option>`)
      .join('');
      voicesDropdown.innerHTML = voiceOptions;
      }

      function setVoice() {
      msg.voice = voices.find(voice => voice.name === this.value);
      toggle();
      }

      function toggle(startOver = true) {
      speechSynthesis.cancel();
      if (startOver) {
        speechSynthesis.speak(msg);
      }
      }

      function setOption() {
      msg[this.name] = this.value;
      toggle();
      }

      voicesDropdown.addEventListener('change', setVoice);
      speechSynthesis.addEventListener('voiceschanged', populateVoices);
      options.forEach(option => option.addEventListener('change', setOption));
      speakButton.addEventListener('click', toggle)
      stopButton.addEventListener('click', toggle.bind(null, false));
    </script>
    <style>
      html {
      font-size: 10px;
      box-sizing: border-box;
      }

      *, *:before, *:after {
      box-sizing: inherit;
      }

      body {
      margin: 0;
      padding: 0;
      font-family: sans-serif;
      background-color: #3BC1AC;
      min-height: 100vh;
      align-items: center;

      background-image:
      radial-gradient(circle at 100% 150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),
      radial-gradient(circle at 0    150%, #3BC1AC 24%, #42D2BB 25%, #42D2BB 28%, #3BC1AC 29%, #3BC1AC 36%, #42D2BB 36%, #42D2BB 40%, transparent 40%, transparent),
      radial-gradient(circle at 50%  100%, #42D2BB 10%, #3BC1AC 11%, #3BC1AC 23%, #42D2BB 24%, #42D2BB 30%, #3BC1AC 31%, #3BC1AC 43%, #42D2BB 44%, #42D2BB 50%, #3BC1AC 51%, #3BC1AC 63%, #42D2BB 64%, #42D2BB 71%, transparent 71%, transparent),
      radial-gradient(circle at 100% 50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent),
      radial-gradient(circle at 0    50%, #42D2BB 5%, #3BC1AC 6%, #3BC1AC 15%, #42D2BB 16%, #42D2BB 20%, #3BC1AC 21%, #3BC1AC 30%, #42D2BB 31%, #42D2BB 35%, #3BC1AC 36%, #3BC1AC 45%, #42D2BB 46%, #42D2BB 49%, transparent 50%, transparent);
      background-size:100px 50px;
      }

      .voiceinator {
      padding: 2rem;
      width: 50rem;
      margin: 0 auto;
      border-radius: 1rem;
      position: relative;
      background: white;
      overflow: hidden;
      z-index: 1;
      box-shadow: 0 0 5px 5px rgba(0,0,0,0.1);
      }

      h1 {
      width: calc(100% + 4rem);
      margin: -2rem 0 2rem -2rem;
      padding: .5rem;
      background: #ffc600;
      border-bottom: 5px solid #F3C010;
      text-align: center;
      font-size: 5rem;
      font-weight: 100;
      font-family: 'Pacifico', cursive;
      text-shadow: 3px 3px 0 #F3C010;
      }

      .voiceinator input,
      .voiceinator button,
      .voiceinator select,
      .voiceinator textarea {
      width: 100%;
      display: block;
      margin: 10px 0;
      padding: 10px;
      border: 0;
      font-size: 2rem;
      background: #F7F7F7;
      outline: 0;
      }

      textarea {
      height: 20rem;
      }

      input[type="select"] {

      }

      .voiceinator button {
      background: #ffc600;
      border: 0;
      width: 49%;
      float: left;
      font-family: 'Pacifico', cursive;
      margin-bottom: 0;
      font-size: 2rem;
      border-bottom: 5px solid #F3C010;
      cursor: pointer;
      position: relative;
      }

      .voiceinator button:active {
      top: 2px;
      }

      .voiceinator button:nth-of-type(1) {
      margin-right: 2%;
      }
    </style>
    <%end%>
    <div style=" padding: 1rem 2rem 1rem 5rem; border-radius:8px; background: white; border:1px solid; margin: 3rem;">
      <h4>The code for it is the following</h4>
        <pre>
        <code>
        <h3>HTML</h3>
            <%=@article.HTML%>
            <h3>CSS</h3>
            <%=@article.CSS%>
            <h3>JS</h3>
            <%=@article.JS%>
        </code>
        </pre>
    </div>




</body>
</html>